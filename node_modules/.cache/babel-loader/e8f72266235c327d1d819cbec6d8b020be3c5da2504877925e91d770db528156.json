{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      records: [],\n      // 订单数据列表\n      total: 0,\n      // 总记录数\n      currentPage: 1,\n      // 当前页码\n      pageSize: 10,\n      // 每页显示的记录数\n      editflag: false,\n      form: {\n        id: \"\",\n        userId: \"\",\n        totalPrice: \"\"\n      },\n      dialogFormVisible: false,\n      formLabelWidth: \"120px\"\n    };\n  },\n  methods: {\n    // 编辑订单\n    editOrder(row) {\n      this.editflag = true;\n      console.log(this.editflag);\n      this.form = {\n        id: row.id,\n        userId: row.userId,\n        totalPrice: row.totalPrice\n      };\n    },\n    // 提交表单\n    submitForm() {\n      axios({\n        url: \"/api/business/order/update\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"put\",\n        data: {\n          id: this.form.id,\n          status: this.form.status,\n          totalPrice: this.form.totalPrice\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        this.loadData(); // 刷新订单数据\n        this.editflag = false; // 关闭编辑状态\n      }).catch(err => {\n        console.log(err.data.msg);\n      });\n    },\n    // 删除订单\n    deleteOrder(id) {\n      axios({\n        url: \"/api/business/order/delete\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"delete\",\n        data: {\n          id: id\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        this.loadData(); // 刷新订单数据\n      }).catch(err => {\n        console.log(err.data.msg);\n      });\n    },\n    // 查看订单详情\n    viewOrder(id) {\n      // 在这里添加响应按钮和配置路由，跳转到订单详情页\n      this.$router.push({\n        path: \"/order/detail\",\n        query: {\n          id: id\n        }\n      });\n    },\n    // 分页改变时触发\n    changePage(page) {\n      this.currentPage = page;\n      this.loadData(); // 重新加载数据\n    },\n    // 加载数据\n    loadData() {\n      axios({\n        url: \"/api/business/order/page\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"get\",\n        params: {\n          status: \"1\",\n          // 根据需求填写\n          page: this.currentPage,\n          // 当前页码\n          pageSize: this.pageSize,\n          // 每页数量\n          id: null,\n          // 根据需求填写\n          phone: null // 根据需求填写\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        this.total = res.data.data.total;\n        this.records = res.data.data.records;\n      }).catch(err => {\n        console.log(err.data.msg);\n      });\n    }\n  },\n  created() {\n    this.loadData(); // 初始化加载数据\n  }\n};","map":{"version":3,"names":["axios","data","records","total","currentPage","pageSize","editflag","form","id","userId","totalPrice","dialogFormVisible","formLabelWidth","methods","editOrder","row","console","log","submitForm","url","headers","token","localStorage","getItem","method","status","then","res","loadData","catch","err","msg","deleteOrder","viewOrder","$router","push","path","query","changePage","page","params","phone","created"],"sources":["src/components/business/BusinessOrderManage.vue"],"sourcesContent":["TODO\r\n点击订单管理，自动跳转到分页查询，这个界面要借鉴黑马苍穹外卖的UI设计，有分页查询（包括根据关键字号查询），修改订单状态，删除订单，订单分页查询详情\r\nTODO\r\n查看订单详情跳转到src\\views\\business\\orderfunction\\DetailOrderView.vue，这个你们自己添加响应按钮和配置路由，注意是一个订单一个“查看详情”按钮\r\nTODO 请求的时候data里面的数据得根据前端设计填充\r\n<template>\r\n  <div>\r\n    <el-table :data=\"records\" style=\"width: 100%\">\r\n      <el-table-column label=\"订单ID\" prop=\"id\" width=\"120\"></el-table-column>\r\n      <el-table-column label=\"顾客ID\" prop=\"userId\" width=\"120\"></el-table-column>\r\n      <el-table-column label=\"价格\" prop=\"totalPrice\" width=\"120\"></el-table-column>\r\n      <el-table-column label=\"状态\" prop=\"status\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"scope.row.status === 0\">未接单</span>\r\n          <span v-else-if=\"scope.row.status === 1\">已结单</span>\r\n          <span v-else-if=\"scope.row.status === 2\">派送中</span>\r\n          <span v-else-if=\"scope.row.status === 3\">已完成</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"地址\" prop=\"address\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" @click=\"editOrder(scope.row)\">编辑</el-button>\r\n          <!-- <el-button type=\"text\" @click=\"dialogFormVisible = true\">编辑</el-button> -->\r\n          <el-button type=\"text\" @click=\"deleteOrder(scope.row.id)\">删除</el-button>\r\n          <el-button type=\"text\" @click=\"viewOrder(scope.row.id)\">查看详情</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div style=\"margin-top: 20px\">\r\n      <el-pagination\r\n        :current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        @current-change=\"changePage\"\r\n        layout=\"total\"\r\n        :total=\"total\"\r\n      ></el-pagination>\r\n    </div>\r\n\r\n    <el-dialog title=\"修改订单\" :visible.sync=\"editflag\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"订单ID\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form.id\" autocomplete=\"off\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"顾客ID\" :label-width=\"formLabelWidth\"\r\n          ><el-input v-model=\"form.userId\" autocomplete=\"off\" disabled></el-input\r\n        ></el-form-item>\r\n        <el-form-item label=\"价钱\" :label-width=\"formLabelWidth\"\r\n          ><el-input v-model=\"form.totalPrice\" autocomplete=\"off\"></el-input\r\n        ></el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogFormVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      records: [], // 订单数据列表\r\n      total: 0, // 总记录数\r\n      currentPage: 1, // 当前页码\r\n      pageSize: 10, // 每页显示的记录数\r\n      editflag: false,\r\n      form: {\r\n        id: \"\",\r\n        userId: \"\",\r\n        totalPrice: \"\",\r\n      },\r\n      dialogFormVisible: false,\r\n      formLabelWidth: \"120px\",\r\n    };\r\n  },\r\n  methods: {\r\n    // 编辑订单\r\n    editOrder(row) {\r\n      this.editflag = true;\r\n      console.log(this.editflag);\r\n      this.form = {\r\n        id: row.id,\r\n        userId: row.userId,\r\n        totalPrice: row.totalPrice,\r\n      };\r\n    },\r\n    // 提交表单\r\n    submitForm() {\r\n      axios({\r\n        url: \"/api/business/order/update\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"put\",\r\n        data: {\r\n          id: this.form.id,\r\n          status: this.form.status,\r\n          totalPrice: this.form.totalPrice,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          this.loadData(); // 刷新订单数据\r\n          this.editflag = false; // 关闭编辑状态\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n    // 删除订单\r\n    deleteOrder(id) {\r\n      axios({\r\n        url: \"/api/business/order/delete\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"delete\",\r\n        data: {\r\n          id: id,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          this.loadData(); // 刷新订单数据\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n    // 查看订单详情\r\n    viewOrder(id) {\r\n      // 在这里添加响应按钮和配置路由，跳转到订单详情页\r\n      this.$router.push({\r\n        path: \"/order/detail\",\r\n        query: {\r\n          id: id,\r\n        },\r\n      });\r\n    },\r\n    // 分页改变时触发\r\n    changePage(page) {\r\n      this.currentPage = page;\r\n      this.loadData(); // 重新加载数据\r\n    },\r\n    // 加载数据\r\n    loadData() {\r\n      axios({\r\n        url: \"/api/business/order/page\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"get\",\r\n        params: {\r\n          status: \"1\", // 根据需求填写\r\n          page: this.currentPage, // 当前页码\r\n          pageSize: this.pageSize, // 每页数量\r\n          id: null, // 根据需求填写\r\n          phone: null, // 根据需求填写\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          this.total = res.data.data.total;\r\n          this.records = res.data.data.records;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.loadData(); // 初始化加载数据\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA6DA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,KAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,QAAA;MACAC,IAAA;QACAC,EAAA;QACAC,MAAA;QACAC,UAAA;MACA;MACAC,iBAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,UAAAC,GAAA;MACA,KAAAT,QAAA;MACAU,OAAA,CAAAC,GAAA,MAAAX,QAAA;MACA,KAAAC,IAAA;QACAC,EAAA,EAAAO,GAAA,CAAAP,EAAA;QACAC,MAAA,EAAAM,GAAA,CAAAN,MAAA;QACAC,UAAA,EAAAK,GAAA,CAAAL;MACA;IACA;IACA;IACAQ,WAAA;MACAlB,KAAA;QACAmB,GAAA;QACAC,OAAA;UACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;QACA;QACAC,MAAA;QACAvB,IAAA;UACAO,EAAA,OAAAD,IAAA,CAAAC,EAAA;UACAiB,MAAA,OAAAlB,IAAA,CAAAkB,MAAA;UACAf,UAAA,OAAAH,IAAA,CAAAG;QACA;MACA,GACAgB,IAAA,CAAAC,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA,CAAA1B,IAAA,CAAAA,IAAA;QACA,KAAA2B,QAAA;QACA,KAAAtB,QAAA;MACA,GACAuB,KAAA,CAAAC,GAAA;QACAd,OAAA,CAAAC,GAAA,CAAAa,GAAA,CAAA7B,IAAA,CAAA8B,GAAA;MACA;IACA;IACA;IACAC,YAAAxB,EAAA;MACAR,KAAA;QACAmB,GAAA;QACAC,OAAA;UACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;QACA;QACAC,MAAA;QACAvB,IAAA;UACAO,EAAA,EAAAA;QACA;MACA,GACAkB,IAAA,CAAAC,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA,CAAA1B,IAAA,CAAAA,IAAA;QACA,KAAA2B,QAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACAd,OAAA,CAAAC,GAAA,CAAAa,GAAA,CAAA7B,IAAA,CAAA8B,GAAA;MACA;IACA;IACA;IACAE,UAAAzB,EAAA;MACA;MACA,KAAA0B,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACA7B,EAAA,EAAAA;QACA;MACA;IACA;IACA;IACA8B,WAAAC,IAAA;MACA,KAAAnC,WAAA,GAAAmC,IAAA;MACA,KAAAX,QAAA;IACA;IACA;IACAA,SAAA;MACA5B,KAAA;QACAmB,GAAA;QACAC,OAAA;UACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;QACA;QACAC,MAAA;QACAgB,MAAA;UACAf,MAAA;UAAA;UACAc,IAAA,OAAAnC,WAAA;UAAA;UACAC,QAAA,OAAAA,QAAA;UAAA;UACAG,EAAA;UAAA;UACAiC,KAAA;QACA;MACA,GACAf,IAAA,CAAAC,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA,CAAA1B,IAAA,CAAAA,IAAA;QACA,KAAAE,KAAA,GAAAwB,GAAA,CAAA1B,IAAA,CAAAA,IAAA,CAAAE,KAAA;QACA,KAAAD,OAAA,GAAAyB,GAAA,CAAA1B,IAAA,CAAAA,IAAA,CAAAC,OAAA;MACA,GACA2B,KAAA,CAAAC,GAAA;QACAd,OAAA,CAAAC,GAAA,CAAAa,GAAA,CAAA7B,IAAA,CAAA8B,GAAA;MACA;IACA;EACA;EACAW,QAAA;IACA,KAAAd,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}